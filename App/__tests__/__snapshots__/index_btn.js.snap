// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LOGIN 1`] = `
<View
  style={
    Object {
      "height": 60,
      "marginVertical": 10,
      "paddingHorizontal": 0,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(255,255,255,.3)",
          "borderRadius": 22,
          "flex": 1,
          "justifyContent": "center",
          "margin": 5,
          "padding": 10,
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "alignItems": "center",
            "color": "#ffffff",
            "fontSize": 20,
            "fontWeight": "400",
            "justifyContent": "center",
          }
        }
      >
         
      </Text>
    </View>
  </View>
</View>
`;

exports[`testing btn component 1`] = `
<View
  style={
    Object {
      "height": 60,
      "marginVertical": 10,
      "paddingHorizontal": 0,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(255,255,255,.3)",
          "borderRadius": 22,
          "flex": 1,
          "justifyContent": "center",
          "margin": 5,
          "padding": 10,
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "alignItems": "center",
            "color": "#ffffff",
            "fontSize": 20,
            "fontWeight": "400",
            "justifyContent": "center",
          }
        }
      >
         
      </Text>
    </View>
  </View>
</View>
`;
